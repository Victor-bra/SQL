/*WHERE и HAVING могут использоваться в одном запросе. При этом необходимо учитывать порядок выполнения  SQL запроса
  на выборку на СЕРВЕРЕ:
    FROM
    WHERE
    GROUP BY
    HAVING
    SELECT
    ORDER BY

Сначала определяется таблица, из которой выбираются данные (FROM), затем из этой таблицы отбираются записи в
  соответствии с условием  WHERE, выбранные данные агрегируются (GROUP BY),  из агрегированных записей выбираются те,
  которые удовлетворяют условию после HAVING. Потом формируются данные результирующей выборки, как это указано
  после SELECT ( вычисляются выражения, присваиваются имена и пр. ). Результирующая выборка сортируется,
  как указано после ORDER BY.

Важно! Порядок ВЫПОЛНЕНИЯ запросов - это не порядок ЗАПИСИ ключевых слов в запросе на выборку. Порядок записи
  (синтаксис запроса) остается таким же, как рассматривался ранее в курсе. Порядок ВЫПОЛНЕНИЯ  нужен для того,
  чтобы понять, почему, например, в WHERE нельзя использовать имена выражений из SELECT. Просто SELECT выполняется
  компилятором позже, чем WHERE, поэтому ему неизвестно, какое там выражение написано.

Пример:
Вывести максимальную и минимальную цену книг каждого автора, кроме Есенина, количество экземпляров книг которого больше 10.

SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
WHERE author <> 'Есенин С.А.'
GROUP BY author
HAVING SUM(amount) > 10;

Результат:
+------------------+------------------+-------------------+
| author           | Минимальная_цена | Максимальная_цена |
+------------------+------------------+-------------------+
| Достоевский Ф.М. | 460.00           | 799.01            |
+------------------+------------------+-------------------+

Другим способом решения примера является запрос:
SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(amount) > 10 AND author <> 'Есенин С.А.';

Не смотря на то что результат будет одинаковым, так делать не рекомендуется. «Потому что как написано -
  запрос сначала выбирает всех авторов, потом выводит данные, рассчитывая минимальное и максимальное значение
  цены для каждого, и только после всего убирает Есенина. Можно убрать Есенина в данном случае раньше и не
  использовать ресурсы базы для расчета его минимального и максимального значения, как это сделано в первом варианте.
  На небольшой базе быстродействия не ощутить, но если выполнять такое на продуктивной,
  то второй вариант значительно проигрывает...»*/

# ------------------------------------------------------------------------------------

/*
Задание:
Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат
включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия»)
более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.

Результат:
+------------------+-----------+
| author           | Стоимость |
+------------------+-----------+
| Есенин С.А.      | 9750.00   |
| Достоевский Ф.М. | 7202.03   |
+------------------+-----------+
*/

select author, sum(price * amount) as 'Стоимость'
from book
where title<>'Идиот' and title<>'Белая гвардия'
group by author
having sum(price * amount)>5000
order by 2 DESC